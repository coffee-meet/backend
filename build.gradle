import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.3' // restdocsApiSpecVersion 버전 변수 설정
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'coffee-meet'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    /* Database */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    /* Spring */
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    /* Lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* Test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'org.instancio', name: 'instancio-junit', version: '3.0.0'

    /* TestContainer */
    testImplementation "org.testcontainers:testcontainers:1.19.0"
    testImplementation "org.testcontainers:junit-jupiter:1.19.0"

    /* Docs & UI */
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSpecVersion}"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    swaggerUI 'org.webjars:swagger-ui:4.11.1'

    /* Cloud */
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
    useJUnitPlatform()
}

swaggerSources {
    sample {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

openapi3 {
    servers = [
            { url = "http://localhost:8080" },
            { url = "http://13.125.194.230/:8080" }
    ]
    title = "API 문서"
    description = "RestDocsWithSwagger Docs"
    version = "0.0.1"
    format = "yaml"
}

tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'
    doFirst {
        def swaggerUIFile = file("${openapi3.outputDirectory}/openapi3.yaml")

        def securitySchemesContent = "  securitySchemes:\n" +     \
                                         "    APIKey:\n" +     \
                                         "      type: apiKey\n" +     \
                                         "      name: Authorization\n" +     \
                                         "      in: header\n" +    \
                                         "security:\n" +
                "  - APIKey: []  # Apply the security scheme here"

        swaggerUIFile.append securitySchemesContent
    }
}

bootJar {
    dependsOn generateSwaggerUISample
    from("${generateSwaggerUISample.outputDir}") {
        into 'static/docs'
    }
}
